// @import "./media.scss";


$color-main : red;


// style 코드블록을 @mixin을 사용하여 함수처럼 사용
@mixin box-width($size) {
  width: $size;
  height: $size;

}

// 사용할땐 @include를사용
.box1 {
  @include box-width(100px);
  background-color: blue;

}
.box2 {
  @include box-width(200px);
  background-color: green;
}

.scss-parents {
  color:$color-main;
  // // width: 100vw - 200; 왜 안될까~?
  // background-color: yellow;
}

.scss-parents  {
  .ul{
    background-color: black;
    color: white;
  }

  &:hover {
    cursor :pointer;
  }

}
.btn{
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
}

.btn-primary{
  @extend .btn;
  background-color: aqua
};

//네모네모

.origin-sass {
  display :flex;
  .box{
    @include box-width(100px);

    &.red {
      background-color: red;
    }

    &.orange {
      background-color: orange;
    }
    &.green {
      background-color: green;
    }
  }
}

// .scss-parents > ul {} 원래 css에서 사용

// 컴퓨터 2580



// 태블릿일 때는 768px
// @mixin tablet {
//   @media screen and (max-width:768px ){
//     .origin-sass{
//       display: block;
//     }

//   }
// }


@mixin tablet {
  @media screen and (max-width:768px ) {
    @content;
  }
}

// @mixin :css에서 묶어두고 싶은 코드블럭을 정의할 때 사용
// @include : 정의한 mixin을 사용할때
// @content : 정의할 때 @content 키워드 적은 곳 - 사용할 때, 중괄호 안에 적은 내용

@include tablet {
  .origin-sass{
    display: block;
  }
}

// 핸드폰 500px

