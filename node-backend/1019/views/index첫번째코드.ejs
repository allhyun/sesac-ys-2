<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>동적 폼 전송</title>
    <script
  src="https://code.jquery.com/jquery-3.7.1.min.js"
  integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
  crossorigin="anonymous"></script>
<!-- 아래 cdn은 axios 사용을 위한 것 -->
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    <form name="register">
        <!-- action은 폼을 작성했을때 제출하는 용도 -->
    
        <input type="text" name="id" placeholder="ID" pattern="^[a-z0-9]{5,}$" title= "소문자, 숫자를 이용하여 5글자 이상" required >
        <input type="password" name="pw" placeholder="password">
        <input type="text" name="name" placeholder="이름" required>

        <button type="button" onclick="ajaxGet()">ajax get 제출</button>
        <button type="button" onclick="ajaxPost()">ajax post 제출</button>
        <button type="button" onclick="axiosGet()">axio get 제출</button>
        <button type="button" onclick="axiosPost()">axio post 제출</button>       

        <!-- 아래 두 줄은 일반(동기) 폼을 전송할 떄 사용되는 type -->
        <!-- <input trpe="submit"> = <button type="submit" -->
        <!-- <button type ="submit">제출</button> -->
    </form>
    <h3 id="result"></h3>
    <!-- ajax는 jQuery를 불러와야 사용이 가능하다. -->
    
    <script>
        function getData(){
            const form= document.forms["register"];
                        //조건값에 ! 앞에 붙이면 true => false false=>true 로 나타낸다
            //getData라는 함수의 반환값은 총 2가지 형태
            //false or object(객체형태)로 나타냄

            
            
            const data = {
                id:form.id.value,
                pw:form.pw.value,
                name:form.name.value,

            }
            return data
        }
        function ajaxGet(){
            const form= document.forms["register"];
            // console.log(form);
            // console.dir(form.id);//객체로 보여주는 코드
            //폼안의 id객체를 보여줘! 하는 코드

            const data = {
                id:form.id.value,
                pw:form.pw.value,
                name:form.name.value,

            }
            //ajax함수.
            // 
            $.ajax({
                type:"GET",//폼 속성 중 method 에 해당하는 내용
                url: "/ajax", //폼 속성 중 action에 해당하는 내용.
                data: data,
                success: function(result){ //응답을 성공적으로 받았을 경우에 대한 이벤트핸들러
                    //매개변수(result)에 응답이 들어옴
                    console.log(result);
                    const{
                        name
                    } = result;
                    $("#result").html(`ajax get 요청 성송 ${result.name} 환영합니다`)

                }
            });
            //  객체로 변환해서 전송하면 된다.


            //get요청일 경우에만 url을 만들 수 있따.

            // $.ajax({
            //     type:"GET",//폼 속성 중 method 에 해당하는 내용
            //     url: `/ajax?id=${data.id}&pw=${data.pw}&name=${data.name}`, //폼 속성 중 action에 해당하는 내용.
            //     success: function(result){ //응답을 성공적으로 받았을 경우에 대한 이벤트핸들러
            //         //매개변수(result)에 응답이 들어옴
            //         console.log(result);
            //         const{
            //             name
            //         } = result;
            //         $("#result").html(`ajax get 요청 성송 ${result.name} 환영합니다`)

            //     }
            // });
        }

        function ajaxPost(){
            const data =getData();
           
            $.ajax({
                type:"POST",
                url: "/ajax", 
                data: data,
                success: function(result){
                    console.log(result);
                    $("#result").html(`ajax post 요청 성송 ${result.name} 환영합니다`)

                }
            });
            
        }

        function axiosGet(){
            const data = getData();
            axios({
                method: "GET",
                url:"/axios",
                params: data, //get요청에 보낼 데이터
                //params 대신 url에 query를 작성해도 됨 ajax 방법과 같음
            }).then((response)=>{
                //서버에서 보내준 응답이 response에 담긴다.
                console.log(response)
                console.log(response.data)
                const{
                    name
                }=response.data
                $("#result").html(`ajax post 요청 성송 ${name} 환영합니다`)

            })
        }
        //axios함수는 promise 객체를 return한다.


        //promise 사용
        // function axiosPost(){
        //     const data = getData();
        //     axios({
        //         method:"POST",
        //         url:"/axios",
        //         data: data,
        //     }).then((response)=>{
        //         const {name}=response.data
        //         $("#result").html(`axios post 요청 성송 ${name} 환영합니다`)
        //     })
            
        // }


        //async await 방법.
        async function axiosPost(){
            const data = getData();

            const res =await axios({
                method:"POST",
                url:"/axios",
                data: data,
            })
            console.log("res",res)
            console.log("res",res.data)  
            $("#result").html(`axios post 요청 성공 ${res.data.name} 환영합니다`)

        }
        
    </script>
</body>
</html>